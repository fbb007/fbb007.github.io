<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>極.369</title>
  
  <subtitle>记住那关于光阴的教训 回头走天已暗</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-07-28T03:41:57.388Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>無極</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>java位运算</title>
    <link href="http://yoursite.com/2020/07/28/java%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    <id>http://yoursite.com/2020/07/28/java%E4%BD%8D%E8%BF%90%E7%AE%97/</id>
    <published>2020-07-28T03:41:57.000Z</published>
    <updated>2020-07-28T03:41:57.388Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>java基础知识(一)</title>
    <link href="http://yoursite.com/2020/07/27/java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86-%E4%B8%80/"/>
    <id>http://yoursite.com/2020/07/27/java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86-%E4%B8%80/</id>
    <published>2020-07-27T13:36:13.000Z</published>
    <updated>2020-07-28T03:38:47.113Z</updated>
    
    <content type="html"><![CDATA[<h1 id="java基础知识-一"><a href="#java基础知识-一" class="headerlink" title="java基础知识(一)"></a>java基础知识(一)</h1><h2 id="一、数据类型"><a href="#一、数据类型" class="headerlink" title="一、数据类型"></a>一、数据类型</h2><p>在java中，数据类型一共分为两大类：<strong>基本数据类型</strong>    <strong>引用数据类型</strong></p><p>八大基本数据类型：byte    short    int    long    float    double    boolean    char</p><table><thead><tr><th align="left">类型</th><th>位数</th><th>最小值</th><th>最大值</th></tr></thead><tbody><tr><td align="left">byte</td><td>8</td><td>-128</td><td>127</td></tr><tr><td align="left">short</td><td>16</td><td>-32768</td><td>32767</td></tr><tr><td align="left">int</td><td>32</td><td>-2147483648</td><td>2147483647</td></tr><tr><td align="left">long</td><td>64</td><td>-9223372036854775808</td><td>9223372036854775807</td></tr><tr><td align="left">float</td><td>32</td><td>1.4E-45</td><td>3.4028235E38</td></tr><tr><td align="left">double</td><td>64</td><td>4.9E-324</td><td>1.7976931348623157E308</td></tr><tr><td align="left">char</td><td>16</td><td></td><td></td></tr></tbody></table><p>测试代码:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">"byte类型变量的位数："</span> + Byte.SIZE + <span class="string">"，最小值："</span> + Byte.MIN_VALUE + <span class="string">"，最大值："</span> + Byte.MAX_VALUE);</span><br><span class="line">      System.out.println(<span class="string">"short类型变量的位数："</span> + Short.SIZE + <span class="string">"，最小值："</span> + Short.MIN_VALUE + <span class="string">"，最大值："</span> + Short.MAX_VALUE);</span><br><span class="line">      System.out.println(<span class="string">"int类型变量的位数："</span> + Integer.SIZE + <span class="string">"，最小值："</span> + Integer.MIN_VALUE + <span class="string">"，最大值："</span> + Integer.MAX_VALUE);</span><br><span class="line">      System.out.println(<span class="string">"long类型变量的位数："</span> + Long.SIZE + <span class="string">"，最小值："</span> + Long.MIN_VALUE + <span class="string">"，最大值："</span> + Long.MAX_VALUE);</span><br><span class="line">      System.out.println(<span class="string">"float类型变量的位数："</span> + Float.SIZE + <span class="string">"，最小值："</span> + Float.MIN_VALUE + <span class="string">"，最大值："</span> + Float.MAX_VALUE);</span><br><span class="line">      System.out.println(<span class="string">"double类型变量的位数："</span> + Double.SIZE + <span class="string">"，最小值："</span> + Double.MIN_VALUE + <span class="string">"，最大值："</span> + Double.MAX_VALUE);</span><br><span class="line">      System.out.println(<span class="string">"char类型变量的位数："</span> + Character.SIZE + <span class="string">"，最小值："</span> + Character.MIN_VALUE + <span class="string">"，最大值："</span> + Character.MAX_VALUE);</span><br></pre></td></tr></table></figure><p>测试结果：</p><blockquote><p>byte类型变量的位数：8，最小值：-128，最大值：127<br>       short类型变量的位数：16，最小值：-32768，最大值：32767<br>       int类型变量的位数：32，最小值：-2147483648，最大值：2147483647<br>       long类型变量的位数：64，最小值：-9223372036854775808，最大值：9223372036854775807<br>       float类型变量的位数：32，最小值：1.4E-45，最大值：3.4028235E38<br>       double类型变量的位数：64，最小值：4.9E-324，最大值：1.7976931348623157E308<br>       char类型变量的位数：16，最小值： ，最大值：￿</p></blockquote><h3 id="1-1整型数据"><a href="#1-1整型数据" class="headerlink" title="1.1整型数据"></a>1.1整型数据</h3><p>整型数据分为4种：</p><ol><li><p>byte：<br>   8位有符号整数，范围-2^7^ ~ 2^7^-1，默认值为0。</p></li><li><p>short:</p><p>​    16位有符号整数，范围-2^15^ ~ 2^15^-1，默认值为0。</p></li><li><p>int：(最常用)</p><p>​    32位有符号整数，范围-2^31^ ~ 2^31^-1，默认值为0。</p></li><li><p>long：</p><p>​    64位有符号整数，范围-2^63^ ~ 2^63^-1，默认值为0。赋予long类型变量初始值时，需要在数值后面加上L。</p></li></ol><p>测试代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">byte</span> i1;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">short</span> i2;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> i3;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">long</span> i4;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"byte的默认值"</span> + i1);</span><br><span class="line">    System.out.println(<span class="string">"short的默认值"</span> + i2);</span><br><span class="line">    System.out.println(<span class="string">"int的默认值"</span> + i3);</span><br><span class="line">    System.out.println(<span class="string">"long的默认值"</span> + i4);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试结果：</p><blockquote><p>byte的默认值0<br>       short的默认值0<br>       int的默认值0<br>       long的默认值0</p></blockquote><h3 id="1-2浮点数"><a href="#1-2浮点数" class="headerlink" title="1.2浮点数"></a>1.2浮点数</h3><p>浮点数分为2种：</p><ol><li><p>float<br>32位单精度，默认值是0.0。赋予float类型变量初始值时，需要在数值后面加上F。</p></li><li><p>double(常用)</p><p>​    64位双精度，默认值是0.0，浮点型数据默认为double类型。</p></li></ol><h3 id="1-3字符型"><a href="#1-3字符型" class="headerlink" title="1.3字符型"></a>1.3字符型</h3><p>char，16位Unicode字符，范围为0 ~ 215-1（\u0000到\uffff），可存储任意字符，默认值是’u0000’。</p><h3 id="1-4布尔型"><a href="#1-4布尔型" class="headerlink" title="1.4布尔型"></a>1.4布尔型</h3><p>boolean，1位，只有两个值：true和false，默认值是false。</p><h3 id="1-5整数扩展"><a href="#1-5整数扩展" class="headerlink" title="1.5整数扩展"></a>1.5整数扩展</h3><p>进制：二进制0b开头    八进制0开头    十进制    十六进制0x开头</p><p>测试代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i1=<span class="number">0b101</span>;<span class="comment">// 0b开头代表二进制，二进制只有0和1，0b101=5(十进制)</span></span><br><span class="line"><span class="keyword">int</span> i2=<span class="number">0101</span>;<span class="comment">// 0开头代表八进制，八进制0~7，0101=65(十进制)</span></span><br><span class="line"><span class="keyword">int</span> i3=<span class="number">101</span>;<span class="comment">// 十进制</span></span><br><span class="line"><span class="keyword">int</span> i4=<span class="number">0x101</span>;<span class="comment">// 0x开头代表十六进制，十六进制0~9 A~F，0x101=257(十进制)</span></span><br><span class="line">System.out.println(<span class="string">"二进制的0b101="</span>+i1);</span><br><span class="line">System.out.println(<span class="string">"八进制的0b101="</span>+i2);</span><br><span class="line">System.out.println(<span class="string">"十进制的0b101="</span>+i3);</span><br><span class="line">System.out.println(<span class="string">"十六进制的0b101="</span>+i4);</span><br></pre></td></tr></table></figure><p>测试结果：</p><blockquote><p>二进制的0b101=5<br>       八进制的0b101=65<br>       十进制的0b101=101<br>       十六进制的0b101=257</p></blockquote><h3 id="1-6浮点数扩展"><a href="#1-6浮点数扩展" class="headerlink" title="1.6浮点数扩展"></a>1.6浮点数扩展</h3><p>银行业务怎么表示？钱！！！    使用BigDecimal 数学工具类计算。千万不能使用<strong>浮点数</strong>进行关于<strong>钱</strong>的运算。</p><p>测试代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">float</span> f = <span class="number">0.1F</span>;</span><br><span class="line"><span class="keyword">double</span> d = <span class="number">0.1</span>;</span><br><span class="line"><span class="keyword">float</span> ff = <span class="number">88888888F</span>;</span><br><span class="line"><span class="keyword">float</span> fff = ff + <span class="number">1</span>;</span><br><span class="line">System.out.println(<span class="string">"float类型的"</span> + f + <span class="string">"和double类型的"</span> + d + <span class="string">"比较结果="</span> + (f == d));</span><br><span class="line">System.out.println(<span class="string">"float类型的"</span> + ff + <span class="string">"和float类型的"</span> + fff + <span class="string">"比较结果"</span> + (ff == fff));</span><br></pre></td></tr></table></figure><p>测试结果：</p><blockquote><p>float类型的0.1和double类型的0.1比较结果=false<br>       float类型的8.8888888E7和float类型的8.8888888E7比较结果true</p></blockquote><p>从测试代码和测试结果中可以看出，float类型的0.1不等于double类型的0.1。float类型的88888888和88888889相等。</p><p><strong>结论</strong>：</p><ol><li>最好使用完全浮点数进行比较。</li><li>float、double类型：有限、离散、舍入误差、大约、无限接近但不等于。</li></ol><h3 id="1-7字符型扩展"><a href="#1-7字符型扩展" class="headerlink" title="1.7字符型扩展"></a>1.7字符型扩展</h3><p>测试代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> c1 = <span class="string">'a'</span>;</span><br><span class="line"><span class="keyword">char</span> c2 = <span class="string">'中'</span>;</span><br><span class="line">System.out.println((<span class="keyword">int</span>) c1);</span><br><span class="line">System.out.println((<span class="keyword">int</span>) c2);</span><br></pre></td></tr></table></figure><p>测试结果：</p><blockquote><p>97<br>       20013</p></blockquote><p><strong>结论</strong>：所有的字符本质还是数字。</p><h3 id="1-8布尔值扩展"><a href="#1-8布尔值扩展" class="headerlink" title="1.8布尔值扩展"></a>1.8布尔值扩展</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line"><span class="keyword">if</span> (flag == <span class="keyword">true</span>) &#123;<span class="comment">// 新手</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag) &#123;<span class="comment">// 老手</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码要精简易读！</p><h3 id="1-9类型转换"><a href="#1-9类型转换" class="headerlink" title="1.9类型转换"></a>1.9类型转换</h3><p><strong>强制类型转换</strong>：(类型)变量名    高—&gt;低</p><p>测试代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">128</span>;</span><br><span class="line"><span class="keyword">byte</span> b = (<span class="keyword">byte</span>) a;<span class="comment">//内存溢出 强制转换时要注意数据类型的大小</span></span><br><span class="line">System.out.println(a);</span><br><span class="line">System.out.println(b);</span><br></pre></td></tr></table></figure><p>测试结果：</p><blockquote><p>128<br>       -128</p></blockquote><p><strong>注意</strong>：强制类型转换时要注意数据类型的大小。 高(int)—&gt;低(byte)</p><p><strong>自动类型转换</strong>：低—&gt;高</p><p>测试代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">     <span class="keyword">int</span> a = <span class="number">128</span>;</span><br><span class="line"><span class="keyword">double</span> c = a;</span><br><span class="line">      System.out.println(a);</span><br><span class="line">      System.out.println(c);</span><br></pre></td></tr></table></figure><p>测试结果：</p><blockquote><p>128<br>        128.0</p></blockquote><p><strong>类型转换注意点</strong>：</p><p>​    1. 不能对布尔值进行转换</p><pre><code>2. 不能把对象类型转换为不相干的类型3. 在把高容量转换到低容量的时候，强制类型转换4. 转换的时候可能存在内存溢出问题</code></pre><h2 id="二、变量常量"><a href="#二、变量常量" class="headerlink" title="二、变量常量"></a>二、变量常量</h2><h3 id="2-1变量的定义"><a href="#2-1变量的定义" class="headerlink" title="2.1变量的定义"></a>2.1变量的定义</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int a,b,c; 不建议这样定义变量</span></span><br><span class="line"><span class="keyword">int</span> a;</span><br><span class="line"><span class="keyword">int</span> b;</span><br><span class="line"><span class="keyword">int</span> c;</span><br><span class="line"><span class="comment">//尽量这样写，提高代码可阅读性。</span></span><br></pre></td></tr></table></figure><h3 id="2-2变量"><a href="#2-2变量" class="headerlink" title="2.2变量"></a>2.2变量</h3><p><strong>变量</strong>可分为三种：类变量/静态变量，实例变量，局部变量。</p><p><strong>类变量/静态变量</strong>：</p><ol><li>在方法体之外，使用static关键字声明的变量。</li><li>静态变量的数量与该类的实例对象数量无关，静态变量只有一个。</li><li>如果不手动给静态变量赋值，那么静态变量在创建的时候默认初始化。数值型变量的默认值是0，布尔型默认值是false，引用类型默认值是null。</li><li>静态变量储存在方法区。</li><li>静态变量在第一次被访问时创建，在程序结束时销毁。静态变量从属于类。</li></ol><p>​    </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;java基础知识-一&quot;&gt;&lt;a href=&quot;#java基础知识-一&quot; class=&quot;headerlink&quot; title=&quot;java基础知识(一)&quot;&gt;&lt;/a&gt;java基础知识(一)&lt;/h1&gt;&lt;h2 id=&quot;一、数据类型&quot;&gt;&lt;a href=&quot;#一、数据类型&quot; class
      
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
      <category term="java基础" scheme="http://yoursite.com/tags/java%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
</feed>
